{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Base AutoScalingGroup Template v0.1",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {"default": "AutoScale Configuration"},
          "Parameters": [
            "myAutoscaleVPC",
            "myAutoscaleAZs",
            "myAutoscaleSubnets"
          ]
        },
        {
          "Label": {"default": "Security Configuration"},
          "Parameters": ["myAutoscaleInstanceKeyPair", "myAutoscaleInstanceSecurityGroup"]
        },
        {
          "Label": {"default": "AutoScale EC2 Instance Configuration"},
          "Parameters": ["myAutoscaleInstanceType", "myAutoscaleInstanceOS", "myAutoscaleInstanceAMI"]
        },
        {
          "Label": {"default": "AutoScale Group Size"},
          "Parameters": ["myAsgMinSize", "myAsgDesiredCapacity", "myAsgMaxSize"]
        },
        {
          "Label": {"default": "AutoScale Group Health"},
          "Parameters": ["myAsgCooldown", "myAsgHealthCheckGracePeriod", "myAsgHealthCheckType"]
        }
      ]
    }
  },
  "Parameters": {
    "myAutoscaleAZs": {
      "Type": "List<AWS::EC2::AvailabilityZone::Name>",
      "Description": "The Desired AZs For Your EC2 Instances"
    },
    "myAutoscaleVPC": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "The Desired VPC For Your EC2 Instance"
    },
    "myAutoscaleSubnets": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The Desired Subnets For Your EC2 Instances"
    },
    "myAutoscaleElbSubnets": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The Desired Subnets For Your ELB (REQUIRED Even if not using ELB)"
    },
    "myAutoscaleInstanceKeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "The Desired KeyPair For Your EC2 Instances"
    },
    "myAutoscaleInstanceSecurityGroup": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>",
      "Description": "The Desired SecurityGroup For Your EC2 Instances"
    },
    "myAsgMinSize": {
      "Description": "The Minimum number of EC2 Instances for your AutoScale Group",
      "Type": "String",
      "AllowedPattern": "\\d+"
    },
    "myAsgDesiredCapacity": {
      "Description": "The Desired number of EC2 Instances for your AutoScale Group",
      "Type": "String",
      "AllowedPattern": "\\d+"
    },
    "myAsgMaxSize": {
      "Description": "The Maximum number of EC2 Instances for your AutoScale Group",
      "Type": "String",
      "AllowedPattern": "\\d+"
    },
    "myAsgCooldown": {
      "Description": "The Time in Seconds to Pause Scaling Further after an AutoScale Event",
      "Type": "String",
      "AllowedPattern": "\\d+"
    },
    "myAsgHealthCheckGracePeriod": {
      "Description": "The Time in Seconds to Pause the Heath Check after an Instance is in Service",
      "Type": "String",
      "AllowedPattern": "\\d+"
    },
    "myAsgHealthCheckType": {
      "Description": "Whether the Health Check is from the ELB or the EC2 Instance",
      "Type": "String",
      "AllowedValues": ["EC2", "ELB"]
    },
    "myAutoscaleLbOption": {
      "Description": "If you need an ELB or not for this AutoScale Group",
      "Type": "String",
      "AllowedValues": ["None", "New"]
    },
    "myAutoscaleInstanceType": {
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": ["t2.nano", "t2.micro", "t2.small", "t2.medium",
        "t2.large", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge",
        "m4.10xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge",
        "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
        "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge",
        "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge",
        "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge",
        "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "g2.2xlarge", "g2.8xlarge"],
      "Description": "The Desired Instance Type For Your EC2 Instances"
    },
    "myAutoscaleInstanceOS": {
      "Description": "The Desired OS For Your EC2 Instances",
      "Type": "String",
      "AllowedValues": ["Debian8", "AmazonLinux", "CentOS6", "CentOS7",
        "Ubuntu1204", "Ubuntu1404", "AMI"]
    },
    "myAsgElbProtocol": {
      "Description": "The Desired Protocol for your ELB",
      "Type": "String",
      "AllowedValues": ["HTTP", "HTTPS", "TCP", "SSL"],
      "Default": "HTTP"
    },
    "myAsgElbPort": {
      "Description": "The Desired Port for External Connections to your ELB",
      "Type": "String",
      "AllowedPattern": "\\d+",
      "Default": "80"
    },
    "myAsgInstanceProtocol": {
      "Description": "The Desired Protocol for your ELB",
      "Type": "String",
      "AllowedValues": ["HTTP", "HTTPS", "TCP", "SSL"],
      "Default": "HTTP"
    },
    "myAsgInstancePort": {
      "Description": "The Desired Port for External Connections to your ELB",
      "Type": "String",
      "AllowedPattern": "\\d+",
      "Default": "80"
    },
    "myAutoscaleInstanceAMI": {
      "Type": "String",
      "Description": "If \"AMI\", the Desired AMI For Your EC2 Instances)",
      "Default": "ami-"
    }
  },
  "Mappings": {
    "RegionOSAMIMap":{
      "us-east-1": {"Debian8": "ami-8e9ca3e4", "AmazonLinux": "ami-08111162", "CentOS6": "ami-1c221e76", "CentOS7": "ami-6d1c2007", "Ubuntu1204": "ami-88dfdee2", "Ubuntu1404": "ami-7c927e11", "AMI": ""},
      "us-west-1": {"Debian8": "ami-c890e0a8", "AmazonLinux": "ami-1b0f7d7b", "CentOS6": "ami-ac5f2fcc", "CentOS7": "ami-af4333cf", "Ubuntu1204": "ami-4f285a2f", "Ubuntu1404": "ami-4983fa29", "AMI": ""},
      "us-west-2": {"Debian8": "ami-59799439", "AmazonLinux": "ami-c229c0a2", "CentOS6": "ami-05cf2265", "CentOS7": "ami-d2c924b2", "Ubuntu1204": "ami-1a977e7a", "Ubuntu1404": "ami-c0c439a0", "AMI": ""},
      "eu-west-1": {"Debian8": "ami-3a13ac49", "AmazonLinux": "ami-60338913", "CentOS6": "ami-edb9069e", "CentOS7": "ami-7abd0209", "Ubuntu1204": "ami-65932916", "Ubuntu1404": "ami-a6a62cd5", "AMI": ""},
      "eu-central-1": {"Debian8": "ami-47d93c28", "AmazonLinux": "ami-d0d037bf", "CentOS6": "ami-2bf11444", "CentOS7": "ami-9bf712f4", "Ubuntu1204": "ami-3cf61153", "Ubuntu1404": "ami-6528c50a", "AMI": ""},
      "sa-east-1": {"Debian8": "ami-4e54d622", "AmazonLinux": "ami-1e159872", "CentOS6": "ami-03b93b6f", "CentOS7": "ami-26b93b4a", "Ubuntu1204": "ami-2661ec4a", "Ubuntu1404": "ami-9dcb43f1", "AMI": ""}
    }
  },
  "Conditions": {
    "ManualAMI": {"Fn::Equals": [{"Ref": "myAutoscaleInstanceOS"}, "AMI"]},
    "ASGNewLB": {"Fn::Equals": [{"Ref": "myAutoscaleLbOption"}, "New"]}
  },
  "Resources" : {
    "myAutoscaleInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["ec2.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        }
      }
    },
    "myAutoscaleInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "myAutoscaleInstanceRole"}]
      }
    },
    "myAutoscaleELBSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Condition": "ASGNewLB",
      "Properties": {
        "GroupDescription": "ELB Security Group",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": {"Ref": "myAsgInstancePort"},
            "ToPort": {"Ref": "myAsgInstancePort"},
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {"Ref": "myAutoscaleVPC"}
      }
    },
    "myAutoscaleELB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition": "ASGNewLB",
      "Properties": {
        "Subnets": {"Ref": "myAutoscaleElbSubnets"},
        "CrossZone": "True",
        "Listeners": [
          {
            "InstancePort": {"Ref": "myAsgInstancePort"},
            "InstanceProtocol": {"Ref": "myAsgInstanceProtocol"},
            "LoadBalancerPort": {"Ref": "myAsgElbPort"},
            "Protocol": {"Ref": "myAsgElbProtocol"}
          }
        ],
        "SecurityGroups": [{"Ref": "myAsgElbSG"}, {"Ref": "myAutoscaleELBSG"}]
      }
    },
    "myAsgElbSG":{
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "ELB to EC2 host",
        "VpcId" : {"Ref" : "myAutoscaleVPC"}
      }
    },
    "myAsgElbSGIngress":{
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId": {"Ref": "myAsgElbSG"},
        "SourceSecurityGroupId": {"Ref": "myAsgElbSG"},
        "IpProtocol" : "-1"
      }
    },
    "myLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata":{
        "Comment": "Install Webserver",
        "AWS::CloudFormation::Init" : {
          "config": {
            "packages": {
              "yum":{
                "nginx": []
              }
            },
            "services": {
              "sysvinit": {
                "nginx": {"enabled": "true", "ensureRunning": "true"}
              }
            }
          }
        }
      },
      "Properties": {
        "IamInstanceProfile" : {"Ref": "myAutoscaleInstanceProfile"},
        "ImageId" : {"Fn::If": [
          "ManualAMI",
          {"Ref": "myAutoscaleInstanceAMI"},
          { "Fn::FindInMap" : [ "RegionOSAMIMap", { "Ref" : "AWS::Region" }, {"Ref": "myAutoscaleInstanceOS"}]}
          ]
        },
        "InstanceType": {"Ref": "myAutoscaleInstanceType"},
        "KeyName": {"Ref": "myAutoscaleInstanceKeyPair"},
        "SecurityGroups": [{"Ref": "myAsgElbSG"}],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", [
              "#!/bin/bash -xe\n",
              "yum update -y aws-cfn-bootstrap\n",

              "/opt/aws/bin/cfn-init -v ",
              "         --stack ", { "Ref" : "AWS::StackName" },
              "         --resource myLaunchConfig ",
              "         --region ", { "Ref" : "AWS::Region" }, "\n",

              "/opt/aws/bin/cfn-signal -e $? ",
              "         --stack ", { "Ref" : "AWS::StackName" },
              "         --resource myAutoscaleGroup ",
              "         --region ", { "Ref" : "AWS::Region" }, "\n"
            ]]
          }
        }
      }
    },
    "myAutoscaleGroup":{
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {"Ref": "myAutoscaleAZs"},
        "LaunchConfigurationName" : { "Ref" : "myLaunchConfig" },
        "Cooldown" : { "Ref" : "myAsgCooldown" },
        "HealthCheckType" : { "Ref" : "myAsgHealthCheckType" },
        "HealthCheckGracePeriod" : { "Ref" : "myAsgHealthCheckGracePeriod" },
        "LoadBalancerNames": [{"Fn::If": ["ASGNewLB", {"Ref": "myAutoscaleELB"}, {"Ref": "AWS::NoValue"}]}],
        "MinSize" : { "Ref" : "myAsgMinSize" },
        "DesiredCapacity" : { "Ref" : "myAsgDesiredCapacity" },
        "MaxSize" : { "Ref" : "myAsgMaxSize" },
        "VPCZoneIdentifier": { "Ref" : "myAutoscaleSubnets" }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "PauseTime": "PT5M",
          "WaitOnResourceSignals": "true"
        }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT5M",
          "Count": "1"
        }
      }
    }
  }
}
